;
; Copyright (c) 2020 Raspberry Pi (Trading) Ltd.
;
; SPDX-License-Identifier: BSD-3-Clause
;

.define PUBLIC PIN_OFFS_D0       0
.define PUBLIC PIN_OFFS_VSYNC    8
.define PUBLIC PIN_OFFS_HREF     9
.define PUBLIC PIN_OFFS_PCLK    10

.program ov7670
;.wrap_target
pull                          ; Pull number of lines from FIFO
out Y, 32                     ; Store number of lines in Y
pull                          ; Pull bytes-per-line from FIFO
                              ; Note: We leave bytes-per-line in OSR, to reload X each line 
wait 1 pin PIN_OFFS_VSYNC     ; Wait for VSYNC to go high, signalling frame start

loop_line:                    ; For each line in frame
mov X, OSR                    ; Reload X with bytes-per-line
wait 1 pin PIN_OFFS_HREF      ; Wait for start of line

loop_byte:                    ; For each byte in line
wait 0 pin PIN_OFFS_PCLK      ; Wait for PCLK to go low
wait 1 pin PIN_OFFS_PCLK      ; Wait for PCLK to go high (rising edge)
;wait 0 pin PIN_OFFS_PCLK      ; Wait for PCLK to go low
;wait 1 pin PIN_OFFS_PCLK      ; Wait for PCLK to go high (rising edge)
;in PINS 8
mov isr, pins                     ; Shift in 1 byte of data
jmp x-- loop_byte             ; Next byte

wait 0 pin PIN_OFFS_HREF      ; Wait for end of line
push
jmp y-- loop_line             ; Next line

;.wrap                         ; Next frame

% c-sdk {
static inline void camera_pio_init_gpios(PIO pio, uint sm, uint base_pin)
{
    pio_sm_set_consecutive_pindirs(pio, sm, base_pin, PIN_OFFS_PCLK + 1, false);

    for (uint i = 0; i < PIN_OFFS_PCLK + 1; i++) {
        pio_gpio_init(pio, i + base_pin);
    }

    pio->input_sync_bypass = (0xff << (base_pin + PIN_OFFS_D0));
}

%}
